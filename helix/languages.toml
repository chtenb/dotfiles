# use-grammars = { only = [ "koka" ] }

[language-server.rust-analyzer.config.check]
command = "clippy"

[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 20     # set max completion results len for each group: words, snippets, unicode-input
snippets_first = true         # completions will return before snippets by default
feature_words = true          # enable completion by word
feature_snippets = true       # enable snippets
feature_unicode_input = true  # enable "unicode input"
feature_paths = true          # enable path completion

[language-server.scls-no-path]
command = "simple-completion-language-server"

[language-server.scls-no-path.config]
max_completion_items = 20     # set max completion results len for each group: words, snippets, unicode-input
snippets_first = true         # completions will return before snippets by default
feature_words = true          # enable completion by word
feature_snippets = true       # enable snippets
feature_unicode_input = true  # enable "unicode input"
feature_paths = false          # enable path completion

[language-server.koka]
name = "koka"
command = "koka"
args = [ "--language-server", "--lsstdio", "-iD:/" ]

[[language]]
name = "koka"
language-servers = [ { name = "koka", except-features = [ "diagnostics", "completion", "signature-help" ] }, { name = "scls" } ]
indent = { tab-width = 2, unit = "  " }

# [[grammar]]
# source = { git = "https://github.com/HeikoRibberink/tree-sitter-koka/", rev = "330ce79660eabb6506d2d1d68177ba598c0d0595" }


[[language]]
name = "markdown"
# text-width = 100
soft-wrap = { wrap-at-text-width = false }

# The indent to use. Has sub keys unit (the text inserted into the document when indenting; usually set to N spaces or "\t" for tabs) and tab-width (the number of spaces rendered for a tab)
indent = { tab-width = 8, unit = "\t" }
# indent = { tab-width = 2, unit = " " }

formatter = { command = 'sed', args = ['-b', 's/[ \t]*(\r?)$/\1/'] }
language-servers = ["scls"]


[[language]]
name = "tsv"
scope = "source.tsv"
injection-regex = "tsv"
file-types = ["tsv"]
roots = []
soft-wrap = { enable = false, wrap-at-text-width = false }
indent = { tab-width = 28, unit = "\t" }

[[language]]
name = "tpsv"
scope = "source.tpsv"
injection-regex = "tpsv"
file-types = ["tpsv"]
roots = []
soft-wrap = { enable = false, wrap-at-text-width = false }
indent = { tab-width = 8, unit = "\t" }

[[language]]
name = "sql"
formatter = { command = "sqlformat", args = ["--reindent", "--indent_width", "2", "--keywords", "upper", "--identifiers", "lower", "-"] }

[[language]]
name = "c-sharp"
auto-format = false
language-servers = [ "omnisharp" ]

[language-server.omnisharp]
# relevant defaults:
# csharp-ls = { command = "csharp-ls" }
# omnisharp = { command = "OmniSharp", args = [ "--languageserver" ] }
# omnisharp = { command = "OmniSharp", args = [ "--languageserver" ], timeout = 30 }
command = "dotnet"
args = [ "C:/Program Files/OmniSharp/OmniSharp.dll", "--languageserver" ]
timeout = 30

[language-server.ucm]
command = "ncat"
args = ["localhost", "5757"]

[[language]]
name = "xml"
formatter = { command = "tidy", args = ["-q", "-xml", "--show-errors", "0", "--show-warnings", "0", "--force-output", "--indent", "auto",  "--vertical-space", "yes", "--tidy-mark", "no", "-wrap", "120"] }
file-types = [
  "imshare",
  "xml", "mobileconfig", "plist", "xib", "svg", "xsd", "xaml", "rss", "atom", "opml", "policy", "ascx", "axml", "axaml", "bpmn", "cpt", "csl", "csproj.user", "dita", "ditamap", "dtml", "fxml", "iml", "isml", "jmx", "launch", "menu", "mxml", "nuspec", "osc", "osm", "pt", "publishsettings", "pubxml", "pubxml.user", "rbxlx", "rbxmx", "rng", "shproj", "tld", { glob = "*.tm[Tt]heme" }, "tmx", "vbproj.user", "vcxproj", "vcxproj.filters", "wsdl", "wxi", "wxs", "xbl", "xlf", "xliff", "xpdl", "xul", "xoml", "musicxml", "glif", "ui", "sublime-snippet", "xsl", "mpd", "smil" ]

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }
grammar = "xml"
file-types = [ { glob = "*html" } ]

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }

[[language]]
name = "javascript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }

[language-server.racket]
command = "racket"
args = ["-l", "racket-langserver"]

[[language]]
name = "racket"
scope = "source.racket"
file-types = ["rkt", "rktd", "rktl", "scrbl"]
shebangs = ["racket"]
comment-token = ";"
indent = { tab-width = 2, unit = "  " }
block-comment-tokens = { start = "#|", end = "|#" }
language-servers = [ "racket" ]
grammar = "scheme"

