theme = "neo-ansi"

[editor]
line-number = "relative"
soft-wrap.enable = true
shell = ["nu", "--stdin", "-c"]
auto-pairs = false
#mouse = false
gutters = ["diagnostics", "line-numbers", "spacer", "diff"]
bufferline = "multiple"
color-modes = true

# [editor.indent-guides]
# render = false
# skip-levels = 1

[editor.whitespace.render]
#ndsp = "all"
tab = "all"
#space = "all"
#newline = "all"

[editor.whitespace.characters]
space = "·"
nbsp = "⍽"
tab = "→"
newline = "⏎"
#tabpad = "·"

[editor.file-picker]
hidden = false

[editor.lsp]
"display-messages" = true

[editor.statusline]
left = ["mode", "spinner", "file-name", "read-only-indicator", "file-modification-indicator"]
center = []
right = ["diagnostics", "version-control", "register", "position", "file-type", "file-encoding", "file-line-ending"]

[keys.insert]
"S-esc" = ["normal_mode", "keep_primary_selection"]

[keys.normal]
"," = "repeat_last_motion"
"S-esc" = ["normal_mode", "keep_primary_selection"]
"C-s" = ["save_selection", ":w"]
"C-q" = ":quit"
"C-/" = "toggle_comments"
"C-6" = "goto_last_accessed_file"
"G" = ["goto_last_line"]
"g" = { "e" = "goto_file_end" }

#"A-;" = "collapse_selection"
#";" = "flip_selections"

#"ret" = ["open_below", "normal_mode"]
"H" = ["collapse_selection", "select_mode", "goto_line_start", "exit_select_mode"]
"L" = ["collapse_selection", "select_mode", "goto_line_end", "exit_select_mode"]

"F2" = "rename_symbol"
"F3" = ":format"
"F12" = "goto_definition"
"S-F12" = "goto_reference"
"F4" = [":reload", ":config-reload"]

"w" = ["move_next_word_end", "select_textobject_inner_word"]
"W" = ["move_next_long_word_end", "select_textobject_inner_long_word"]
"A-w" = ["ensure_selections_forward", "flip_selections", "move_prev_word_start", "select_textobject_inner_word"]
"A-W" = ["ensure_selections_forward", "flip_selections", "move_prev_long_word_start", "select_textobject_inner_long_word"]

x = ["extend_to_line_bounds", "select_mode"]
X = ["extend_to_line_bounds", "select_mode", "flip_selections"]

[keys.select]
"," = "repeat_last_motion"
"S-esc" = ["normal_mode", "keep_primary_selection"]
"C-s" = ["save_selection", ":w"]
"C-q" = ":quit"
"C-/" = "toggle_comments"
"C-6" = "goto_last_accessed_file"
"G" = ["goto_last_line"]
"g" = { "e" = "goto_file_end" }

"H" = ["goto_line_start"]
"L" = ["goto_line_end"]

"w" = ["extend_next_word_end"]
"W" = ["extend_next_long_word_end"]
"A-w" = ["extend_prev_word_start"]
"A-W" = ["extend_prev_long_word_start"]

x = "extend_line"
X = "extend_line"
">" = ["indent", "normal_mode"]
"<" = ["unindent", "normal_mode"]

[keys.normal.space]
"q" = ":bc"
F = "file_picker_in_current_buffer_directory"
e = """
:sh echo `echo $':open "(broot)"\r' | wezterm cli send-text --pane-id (wezterm cli get-pane-direction left); exit\r` 
  | wezterm cli send-text --pane-id (wezterm cli split-pane --right --percent 33) --no-paste
"""
z = ":toggle gutters.line-numbers.min-width 48 3"
i = "hover"
v = """
:pipe-to | lines | str join ' ' | parse "{names}" | format "view {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
"""
l = """
:pipe-to | lines | str join ' ' | parse "{names}" | format "ls {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
"""
r = """
:pipe-to | lines | str join ' ' | parse "{names}" | format "run {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
"""

[keys.select.space]
"q" = ":bc"
F = "file_picker_in_current_buffer_directory"
e = """
:sh echo `echo $':open "(broot)"\r' | wezterm cli send-text --pane-id (wezterm cli get-pane-direction left); exit\r` 
  | wezterm cli send-text --pane-id (wezterm cli split-pane --right --percent 33) --no-paste
"""
z = ":toggle gutters.line-numbers.min-width 48 3"
i = "hover"
v = """
:pipe-to | lines | str join ' ' | parse "{names}" | format "view {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
"""
l = """
:pipe-to | lines | str join ' ' | parse "{names}" | format "ls {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
"""
r = """
:pipe-to | lines | str join ' ' | parse "{names}" | format "run {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
"""

