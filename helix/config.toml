theme = "neo-ansi"

[editor]
auto-pairs = false
line-number = "relative"
shell = ["nu", "--stdin", "-c"]
#mouse = false
gutters = ["diagnostics", "line-numbers", "spacer", "diff"]
bufferline = "multiple"
color-modes = true

[editor.soft-wrap]
enable = true
max-wrap = 25 # increase value to reduce forced mid-word wrapping
# max-indent-retain = 40
# wrap-indicator = ""  # set wrap-indicator to "" to hide it

[editor.smart-tab]
enable = false


[editor.indent-guides]
render = true
#character = "╎" # Some characters that work well: "▏", "┆", "┊", "⸽"
skip-levels = 1

[editor.whitespace.render]
ndsp = "all"
tab = "all"
# space = "all"
# newline = "all"

[editor.whitespace.characters]
nbsp = "⍽"
tab = "→"
space = "·"
newline = "⏎"
#tabpad = "·"

[editor.file-picker]
hidden = false

[editor.lsp]
"display-messages" = true

[editor.statusline]
left = ["mode", "spinner", "file-name", "read-only-indicator", "file-modification-indicator"]
center = []
right = ["diagnostics", "version-control", "register", "position", "file-type", "file-encoding", "file-line-ending"]

[keys.insert]
"S-esc" = ["normal_mode", "keep_primary_selection"]

[keys.normal]
"," = "repeat_last_motion"
"S-esc" = ["normal_mode", "keep_primary_selection"]
"C-s" = ["save_selection", ":w"]
"C-q" = ":quit"
"C-/" = "toggle_comments"
"C-6" = "goto_last_accessed_file"
"G" = ["goto_last_line"]
"g" = { "e" = "goto_file_end" }

#"A-;" = "collapse_selection"
#";" = "flip_selections"

#"ret" = ["open_below", "normal_mode"]
"H" = ["collapse_selection", "select_mode", "goto_line_start", "exit_select_mode"]
"L" = ["collapse_selection", "select_mode", "goto_line_end", "exit_select_mode"]

"F2" = "rename_symbol"
"F3" = ":format"
"F12" = "goto_definition"
"S-F12" = "goto_reference"
"F4" = [":reload", ":config-reload"]

# TODO: this should work like before, after having b assigned, w should not select the current word when the cursor is on the final character of the word
"w" = "select_next_word"
"W" = "select_next_long_word"
"b" = "select_prev_word"
"B" = "select_prev_long_word"
"A-e" = "move_prev_word_start"
"A-E" = "move_prev_long_word_start"

J = ["extend_to_line_bounds", "select_mode"]
K = ["extend_to_line_bounds", "select_mode", "flip_selections"]

"A-j" = "join_selections"
"A-J" = "join_selections_space"

X = "remove_primary_selection"
x = "keep_selections"
"A-x" = "remove_selections"

[keys.select]
"," = "repeat_last_motion"
"S-esc" = ["normal_mode", "keep_primary_selection"]
"C-s" = ["save_selection", ":w"]
"C-q" = ":quit"
"C-/" = "toggle_comments"
"C-6" = "goto_last_accessed_file"
"G" = ["goto_last_line"]
"g" = { "e" = "goto_file_end" }

"H" = ["goto_line_start"]
"L" = ["goto_line_end"]

"w" = "extend_next_word_end"
"W" = "extend_next_long_word_end"
"b" = "extend_prev_word_start"
"B" = "extend_prev_long_word_start"
"A-e" = "extend_prev_word_start"
"A-E" = "extend_prev_long_word_start"

">" = ["indent", "normal_mode"]
"<" = ["unindent", "normal_mode"]

J = ["extend_line_down", "extend_to_line_bounds"]
K = ["extend_line_up", "extend_to_line_bounds"]

"A-j" = "join_selections"
"A-J" = "join_selections_space"

X = "remove_primary_selection"
x = "keep_selections"
"A-x" = "remove_selections"


[keys.normal.space]
"q" = ":bc"
F = "file_picker_in_current_buffer_directory"
e = """
:sh echo `echo $':open "(broot)"\r' | wezterm cli send-text --pane-id (wezterm cli get-pane-direction left); exit\r` 
  | wezterm cli send-text --pane-id (wezterm cli split-pane --right --percent 33) --no-paste
"""
z = ":toggle gutters.line-numbers.min-width 48 3"
i = "hover"

# Unison
# v = """
# :pipe-to | lines | str join ' ' | parse "{names}" | format "view {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
# """
# l = """
# :pipe-to | lines | str join ' ' | parse "{names}" | format "ls {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
# """
# r = """
# :pipe-to | lines | str join ' ' | parse "{names}" | format "run {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
# """

# Koka
r = """
:sh ":r\r" | wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
"""

[keys.select.space]
"q" = ":bc"
F = "file_picker_in_current_buffer_directory"
e = """
:sh echo `echo $':open "(broot)"\r' | wezterm cli send-text --pane-id (wezterm cli get-pane-direction left); exit\r` 
  | wezterm cli send-text --pane-id (wezterm cli split-pane --right --percent 33) --no-paste
"""
z = ":toggle gutters.line-numbers.min-width 48 3"
i = "hover"

# Unison
# v = """
# :pipe-to | lines | str join ' ' | parse "{names}" | format "view {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
# """
# l = """
# :pipe-to | lines | str join ' ' | parse "{names}" | format "ls {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
# """
# r = """
# :pipe-to | lines | str join ' ' | parse "{names}" | format "run {names}\r" | get 0 |  wezterm cli send-text --pane-id (wezterm cli get-pane-direction Right)
# """

