// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+w",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly && dance.mode == 'insert'",
    },
    // DANCE
    {
        "key": "ctrl+o",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "'",
        "command": "dance.openMenu",
        "args": {
            "menu": {
                "items": {
                    "l": {
                        "text": "character left",
                        "command": "dance.run",
                        "args": {
                            "commands": [
                                ".select.left.extend",
                                ".selections.changeDirection",
                                ".select.right.extend",
                                ".selections.changeDirection",
                            ],
                        },
                    },
                    "h": {
                        "text": "character right",
                        "command": "dance.run",
                        "args": {
                            "commands": [
                                ".select.right.extend",
                                ".selections.changeDirection",
                                ".select.left.extend",
                                ".selections.changeDirection",
                            ],
                        },
                    },
                    "j": {
                        "text": "line down",
                        "command": "dance.run",
                        "args": {
                            "commands": [
                                ".select.down.extend",
                                ".selections.changeDirection",
                                ".select.up.extend",
                                ".selections.changeDirection",
                            ],
                        },
                    },
                    "k": {
                        "text": "line up",
                        "command": "dance.run",
                        "args": {
                            "commands": [
                                ".select.up.extend",
                                ".selections.changeDirection",
                                ".select.down.extend",
                                ".selections.changeDirection",
                            ],
                        },
                    },
                    "(": {
                        "text": "(surround)",
                        "command": "dance.run",
                        "args": {
                            "input": "await replace((x) => '(' + x + ')')",
                            "commands": [
                                [
                                    ".edit.insert",
                                    {
                                        "where": "start",
                                        "shift": "extend",
                                        "text": "("
                                    }
                                ],
                                [
                                    ".edit.insert",
                                    {
                                        "where": "end",
                                        "shift": "extend",
                                        "text": ")"
                                    }
                                ],
                            ],
                        },
                    },
                    "{": {
                        "text": "{surround}",
                        "command": "dance.run",
                        "args": {
                            "input": "await replace((x) => '{' + x + '}')",
                            "commands": [
                                [
                                    ".edit.insert",
                                    {
                                        "where": "start",
                                        "shift": "extend",
                                        "text": "{"
                                    }
                                ],
                                [
                                    ".edit.insert",
                                    {
                                        "where": "end",
                                        "shift": "extend",
                                        "text": "}"
                                    }
                                ],
                            ],
                        },
                    },
                    "[": {
                        "text": "[surround]",
                        "command": "dance.run",
                        "args": {
                            "input": "await replace((x) => '[' + x + ']')",
                            "commands": [
                                [
                                    ".edit.insert",
                                    {
                                        "where": "start",
                                        "shift": "extend",
                                        "text": "["
                                    }
                                ],
                                [
                                    ".edit.insert",
                                    {
                                        "where": "end",
                                        "shift": "extend",
                                        "text": "]"
                                    }
                                ],
                            ],
                        },
                    },
                    "<": {
                        "text": "<surround>",
                        "command": "dance.run",
                        "args": {
                            "input": "await replace((x) => '<' + x + '>')",
                            "commands": [
                                [
                                    ".edit.insert",
                                    {
                                        "where": "start",
                                        "shift": "extend",
                                        "text": "<"
                                    }
                                ],
                                [
                                    ".edit.insert",
                                    {
                                        "where": "end",
                                        "shift": "extend",
                                        "text": ">"
                                    }
                                ],
                            ],
                        },
                    },
                    "\"": {
                        "text": "\"surround\"",
                        "command": "dance.run",
                        "args": {
                            "input": "await replace((x) => '\"' + x + '\"')",
                            "commands": [
                                [
                                    ".edit.insert",
                                    {
                                        "where": "start",
                                        "shift": "extend",
                                        "text": "\""
                                    }
                                ],
                                [
                                    ".edit.insert",
                                    {
                                        "where": "end",
                                        "shift": "extend",
                                        "text": "\""
                                    }
                                ],
                            ],
                        },
                    },
                    "'": {
                        "text": "'surround'",
                        "command": "dance.run",
                        "args": {
                            "input": "await replace((x) => `'` + x + `'`)",
                            "commands": [
                                [
                                    ".edit.insert",
                                    {
                                        "where": "start",
                                        "shift": "extend",
                                        "text": "'"
                                    }
                                ],
                                [
                                    ".edit.insert",
                                    {
                                        "where": "end",
                                        "shift": "extend",
                                        "text": "'"
                                    }
                                ],
                            ],
                        },
                    },
                    "`": {
                        "text": "`surround`",
                        "command": "dance.run",
                        "args": {
                            "input": "await replace((x) => '`' + x + '`')",
                            "commands": [
                                [
                                    ".edit.insert",
                                    {
                                        "where": "start",
                                        "shift": "extend",
                                        "text": "`"
                                    }
                                ],
                                [
                                    ".edit.insert",
                                    {
                                        "where": "end",
                                        "shift": "extend",
                                        "text": "`"
                                    }
                                ],
                            ],
                        },
                    },
                    "d": {
                        "text": "delete surround",
                        "command": "dance.run",
                        "args": {
                            "input": "await replace((x) => x.slice(1, -1))",
                            "commands": [
                                ".selections.save",
                                ".selections.reduce.edges",
                                ".edit.delete",
                                ".selections.restore",
                            ],
                        },
                    },
                },
            },
            "locked": true,
        },
        "when": "editorTextFocus && dance.mode == 'normal'",
    },
    // END DANCE
    {
        "key": "shift+escape",
        "command": "notifications.clearAll"
    },
    {
        "key": "shift+escape",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
    },
    {
        "key": "f3",
        "command": "editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "f3",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f3",
        "command": "notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "f3",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+=",
        "command": "workbench.action.increaseViewSize"
    },
    {
        "key": "ctrl+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+-",
        "command": "workbench.action.decreaseViewSize"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.zoomOut"
    },
    /***********************/
    /* NAVIGATION UN-BINDS */
    /***********************/
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+pageup",
        "command": "-workbench.action.terminal.scrollUp",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "-workbench.action.terminal.scrollDown",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+l",
        "command": "-notebook.centerActiveCell",
        "when": "notebookEditorFocused"
    },
    {
        "key": "enter",
        "command": "-acceptSelectedSuggestion",
        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "key": "enter",
        "command": "-acceptSelectedSuggestion",
        "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    /********************/
    /* NAVIGATION BINDS */
    /********************/
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.nextEditor",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.previousEditor",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "shift+down",
        "command": "workbench.action.terminal.scrollDown",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+up",
        "command": "workbench.action.terminal.scrollUp",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+f4",
        "command": "workbench.action.terminal.kill",
        "when": "terminalIsOpen && terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+h",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+6",
        "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+6",
        "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "f7",
        "command": "merge-conflict.next"
    },
    {
        "key": "shift+f7",
        "command": "merge-conflict.previous"
    },
    {
        "key": "f7",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+f7",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "ctrl+l",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+h",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+h",
        "command": "showPreviousParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+s",
        "command": "searchEditorApplyChanges.apply",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+l",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && !suggestWidgetVisible && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+r",
        "command": "-extension.vim_ctrl+r",
        "when": "editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"
    },
    /**************/
    /* FIND BINDS */
    /**************/
    {
        "key": "ctrl+f3",
        "command": "-editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "enter",
        "command": "macros.acceptFindInput",
        "when": "editorFocus && findInputFocussed"
    },
    /**************/
    /* EDITOR GROUP UNBINDS */
    /**************/
    {
        "key": "ctrl+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+2",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+5",
        "command": "-workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+6",
        "command": "-workbench.action.focusSixthEditorGroup"
    },
    /**************/
    /* MERGE BINDS */
    /**************/
    {
        "key": "ctrl+1",
        "command": "merge-conflict.accept.current"
    },
    {
        "key": "ctrl+shift+1",
        "command": "merge-conflict.accept.all-current"
    },
    {
        "key": "ctrl+2",
        "command": "merge-conflict.accept.incoming"
    },
    {
        "key": "ctrl+shift+2",
        "command": "merge-conflict.accept.all-incoming"
    },
    {
        "key": "ctrl+3",
        "command": "merge-conflict.accept.both"
    },
    {
        "key": "ctrl+shift+3",
        "command": "merge-conflict.accept.all-both"
    },
    {
        "key": "ctrl+8",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    },
]
