[credential "https://github.com"]
    username = chtenb
[user]
    name = chtenb
    email = ctenbrinke@gmail.com
[submodule]
    recurse = true
[push]
    default = simple
    recurseSubmodules = false
[core]
    excludesfile = ~/dotfiles/.gitignore_global
    hooksPath = ~/dotfiles/githooks
    fscache = true
    preloadindex = true
    editor = hx # vim -u ~/.vimrc.bare
    whitespace = cr-at-eol
    trustctime = false
    filemode = false
    safecrlf = false
[fetch]
    prune = true
[alias]
    ll = "!f() { branch=${1:-HEAD}; upstream=$(git rev-parse --abbrev-ref --symbolic-full-name ${branch}@{upstream} 2>/dev/null); git log --notes --graph --abbrev-commit --decorate --left-right --format=format:'%C(yellow)%h%C(reset)%C(auto)%d%C(reset) %C(normal)%s%C(reset) %C(dim white)- %an%C(reset) %C(dim red)(%ar)%C(reset)' ${branch} ${upstream:+$upstream} ${@:2}; }; f"
    lg = "log --notes --graph --abbrev-commit --decorate --left-right --format=format:'%C(yellow)%h%C(reset)%C(auto)%d%C(reset) %C(normal)%s%C(reset) %C(dim white)- %an%C(reset) %C(dim red)(%ar)%C(reset)'"

    l = "!f() { branch=${1:-HEAD}; upstream=$(git rev-parse --abbrev-ref --symbolic-full-name ${branch}@{upstream} 2>/dev/null); git log -10 --notes --graph --abbrev-commit --decorate --left-right --format=format:'%C(yellow)%h%C(reset)%C(auto)%d%C(reset) %C(normal)%s%C(reset) %C(dim white)- %an%C(reset) %C(dim red)(%ar)%C(reset)' ${branch} ${upstream:+$upstream} ${@:2}; }; f"
    sup = submodule update --init --recursive

    st = status
    showstate = "!f() { cd $(git rev-parse --show-toplevel) && { test -f .git/BISECT_LOG && echo BISECTING && exit 0; test -f .git/MERGE_HEAD && echo MERGING && exit 0; test -d .git/rebase-merge || test -d .git/rebase-apply && echo REBASING && exit 0; test -f .git/CHERRY_PICK_HEAD && echo CHERRY-PICKING && exit 0; test -f .git/REVERT_HEAD && echo REVERTING && exit 0; echo NORMAL; }; }; f"

    last = log -1 --stat

    c = "!f() { ~/dotfiles/interactive-git-checkout/git_checkout.py; }; f"
    bs = bisect
    mt = mergetool
    me = merge
    pl = pull
    ps = push
    psf = push --force-with-lease
    fe = fetch
    cl = clean
    cp = cherry-pick
    ci = commit
    br = branch
    rb = rebase
    co = checkout
    nuke = checkout --
    
    di = "diff --ignore-all-space --color-moved-ws=ignore-all-space"
    ds = diff --staged
    dsi = diff --staged --ignore-all-space --color-moved-ws=ignore-all-space
    sho = "show --ignore-all-space --color-moved-ws=ignore-all-space"
    dst = "diff --stat=150,100 --stat-graph-width=50"

    nonum = "!f() { git -c delta.line-numbers=false "$@"; }; f"

    # Fetch a branch x from origin to origin/x, and set it up to track it.
    add-tracking-branch = "!f() { git remote set-branches --add origin "$1"; }; f"
    # Update current branch to tracking branch, or update given branch x to origin/x.
    retrack = "!f() { : git checkout ; if [ $# -eq 0 ] ; then git reset --hard @{u}; else git fetch . "origin/$1:$1" --recurse-submodules=no; fi }; f"
    # Remove stuck lock file
    unlock = "!f() { root=$(git rev-parse --show-toplevel); rm "$root/.git/index.lock"; }; f"

    # Commands to view the diff of one side while merging
    remote-diff = "!f() { git diff $(git merge-base ORIG_HEAD MERGE_HEAD) MERGE_HEAD \"$@\"; }; f"
    local-diff = "!f() { git diff $(git merge-base ORIG_HEAD MERGE_HEAD) ORIG_HEAD \"$@\"; }; f"
    

    patch = --no-pager diff --no-color
[advice]
    detachedHead = false
[gc]
    auto = 256

[color]
    ui=always

[diff]
    colorMoved = default
    colorMovedWS = ignore-space-at-eol
    guitool = vscode

[pager]
    diff = delta
    log = delta
    reflog = delta
    show = delta

[interactive]
    diffFilter = delta --color-only #--features interactive

[include]
    path = delta/main.gitconfig

[difftool "kdiff3"]
    path = C:/Program Files/KDiff3/kdiff3.exe

[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE


[merge]
    tool = kdiff3
    conflictstyle = diff3
[mergetool]
    keeptemporaries = false
    keepbackup = false
    hideresolved = true
#     prompt = false
#     trustexitcode = false

[mergetool "kdiff3"]
    path = c:/Program Files/KDiff3/kdiff3.exe
[mergetool "vscode"]
    cmd = code --wait $MERGED
[mergetool "meld"]
    # cmd = meld "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED" --auto-merge
    trustExitCode = false
    useAutoMerge = true
    hasOutput = true
